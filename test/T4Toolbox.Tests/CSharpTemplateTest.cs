// <copyright file="CSharpTemplateTest.cs" company="Oleg Sych">
//  Copyright © Oleg Sych. All Rights Reserved.
// </copyright>

namespace T4Toolbox.Tests
{
    using System;
    using System.IO;
    public class CSharpTemplateTest : IDisposable
    {
        private readonly CSharpTemplate template = new TestCSharpTemplate();

        public void Dispose()
        {
            this.template.Dispose();
        }

        [Fact]
        public void FieldNameReturnsCamelCasedIdentifier()
        {
            Assert.Equal("testName", this.template.FieldName("Test Name"));
        }

        [Fact]
        public void IdentifierRemovesWhiteSpace()
        {
            Assert.Equal("TestName", this.template.Identifier(" Test Name "));
        }

        [Fact]
        public void IdentifierConvertsReservedKeywordToLiteralIdentifier()
        {
            Assert.Equal("@class", this.template.Identifier("class"));
        }

        [Fact]
        public void PropertyNameReturnsPascalCasedIdentifier()
        {
            Assert.Equal("TestName", this.template.PropertyName("Test Name"));
        }

        [Fact]
        public void TransformTextGeneratesFileHeader()
        {
            using (var transformation = new FakeTransformation())
            using (var context = new TransformationContext(transformation, transformation.GenerationEnvironment))
            {
                this.template.Context = context;
                transformation.Host.TemplateFile = Path.GetRandomFileName();
                string output = this.template.TransformText();
                Assert.Contains("<autogenerated>", output);
                Assert.Contains(transformation.Host.TemplateFile, output);
            }
        }

        // CSharpTemplate is abstract class. Need a concrete descendant to test it.
        private class TestCSharpTemplate : CSharpTemplate
        {
        }
    }
}